/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as AgentMail from "../../../../api/index";
import * as core from "../../../../core";
import { MessageId } from "./MessageId";
import { MessageThreadId } from "./MessageThreadId";
import { MessageSentAt } from "./MessageSentAt";
import { MessageFrom } from "./MessageFrom";
import { MessageSubject } from "./MessageSubject";
import { MessagePreview } from "./MessagePreview";
import { MessageTo } from "./MessageTo";
import { MessageCc } from "./MessageCc";
import { MessageBcc } from "./MessageBcc";
import { MessageText } from "./MessageText";
import { MessageHtml } from "./MessageHtml";
import { MessageAttachments } from "./MessageAttachments";
import { Attachment } from "./Attachment";

export const Message: core.serialization.ObjectSchema<serializers.Message.Raw, AgentMail.Message> =
    core.serialization.object({
        messageId: core.serialization.property("message_id", MessageId),
        threadId: core.serialization.property("thread_id", MessageThreadId),
        sentAt: core.serialization.property("sent_at", MessageSentAt),
        receivedAt: core.serialization.property("received_at", core.serialization.date().optional()),
        from: MessageFrom,
        replyTo: core.serialization.property("reply_to", core.serialization.string().optional()),
        subject: MessageSubject.optional(),
        preview: MessagePreview.optional(),
        to: MessageTo,
        cc: MessageCc.optional(),
        bcc: MessageBcc.optional(),
        text: MessageText.optional(),
        html: MessageHtml.optional(),
        attachments: MessageAttachments.optional(),
        inReplyTo: core.serialization.property("in_reply_to", core.serialization.string().optional()),
        references: core.serialization.list(core.serialization.string()).optional(),
    });

export declare namespace Message {
    export interface Raw {
        message_id: MessageId.Raw;
        thread_id: MessageThreadId.Raw;
        sent_at: MessageSentAt.Raw;
        received_at?: string | null;
        from: MessageFrom.Raw;
        reply_to?: string | null;
        subject?: MessageSubject.Raw | null;
        preview?: MessagePreview.Raw | null;
        to: MessageTo.Raw;
        cc?: MessageCc.Raw | null;
        bcc?: MessageBcc.Raw | null;
        text?: MessageText.Raw | null;
        html?: MessageHtml.Raw | null;
        attachments?: MessageAttachments.Raw | null;
        in_reply_to?: string | null;
        references?: string[] | null;
    }
}
