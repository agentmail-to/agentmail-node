/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as AgentMail from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { InboxId } from "../../../types/InboxId";
import { ThreadId } from "./ThreadId";
import { ThreadEventId } from "./ThreadEventId";
import { ThreadLabels } from "./ThreadLabels";
import { ThreadTimestamp } from "./ThreadTimestamp";
import { ThreadSenders } from "./ThreadSenders";
import { ThreadRecipients } from "./ThreadRecipients";
import { ThreadMessageCount } from "./ThreadMessageCount";
import { ThreadSubject } from "./ThreadSubject";
import { ThreadPreview } from "./ThreadPreview";
import { ThreadAttachments } from "./ThreadAttachments";
import { ThreadAttachment } from "./ThreadAttachment";

export const ThreadItem: core.serialization.ObjectSchema<
    serializers.inboxes.ThreadItem.Raw,
    AgentMail.inboxes.ThreadItem
> = core.serialization.object({
    inboxId: core.serialization.property("inbox_id", InboxId),
    threadId: core.serialization.property("thread_id", ThreadId),
    eventId: core.serialization.property("event_id", ThreadEventId),
    labels: ThreadLabels,
    timestamp: ThreadTimestamp,
    senders: ThreadSenders,
    recipients: ThreadRecipients,
    messageCount: core.serialization.property("message_count", ThreadMessageCount),
    subject: ThreadSubject.optional(),
    preview: ThreadPreview.optional(),
    attachments: ThreadAttachments.optional(),
});

export declare namespace ThreadItem {
    export interface Raw {
        inbox_id: InboxId.Raw;
        thread_id: ThreadId.Raw;
        event_id: ThreadEventId.Raw;
        labels: ThreadLabels.Raw;
        timestamp: ThreadTimestamp.Raw;
        senders: ThreadSenders.Raw;
        recipients: ThreadRecipients.Raw;
        message_count: ThreadMessageCount.Raw;
        subject?: ThreadSubject.Raw | null;
        preview?: ThreadPreview.Raw | null;
        attachments?: ThreadAttachments.Raw | null;
    }
}
