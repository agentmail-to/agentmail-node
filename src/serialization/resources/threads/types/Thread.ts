/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as AgentmailApi from "../../../../api/index";
import * as core from "../../../../core";
import { ThreadId } from "./ThreadId";
import { InboxId } from "../../inboxes/types/InboxId";
import { ThreadUpdatedAt } from "./ThreadUpdatedAt";
import { ThreadSubject } from "./ThreadSubject";
import { ThreadParticipants } from "./ThreadParticipants";
import { Message } from "../../messages/types/Message";

export const Thread: core.serialization.ObjectSchema<serializers.Thread.Raw, AgentmailApi.Thread> =
    core.serialization.object({
        threadId: core.serialization.property("thread_id", ThreadId),
        inboxId: core.serialization.property("inbox_id", InboxId),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", ThreadUpdatedAt),
        subject: ThreadSubject,
        participants: ThreadParticipants,
        messages: core.serialization.list(Message),
    });

export declare namespace Thread {
    export interface Raw {
        thread_id: ThreadId.Raw;
        inbox_id: InboxId.Raw;
        created_at: string;
        updated_at: ThreadUpdatedAt.Raw;
        subject?: ThreadSubject.Raw;
        participants: ThreadParticipants.Raw;
        messages: Message.Raw[];
    }
}
