/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { AgentMailClient } from "../../src/Client";

describe("Threads", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new AgentMailClient({
            apiKey: "test",
            environment: { http: server.baseUrl, websockets: server.baseUrl },
        });

        const rawResponseBody = {
            count: 1,
            limit: 1,
            next_page_token: "next_page_token",
            threads: [
                {
                    inbox_id: "inbox_id",
                    thread_id: "thread_id",
                    labels: ["labels", "labels"],
                    timestamp: "2024-01-15T09:30:00Z",
                    senders: ["senders", "senders"],
                    recipients: ["recipients", "recipients"],
                    subject: "subject",
                    preview: "preview",
                    attachments: [
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    message_count: 1,
                },
                {
                    inbox_id: "inbox_id",
                    thread_id: "thread_id",
                    labels: ["labels", "labels"],
                    timestamp: "2024-01-15T09:30:00Z",
                    senders: ["senders", "senders"],
                    recipients: ["recipients", "recipients"],
                    subject: "subject",
                    preview: "preview",
                    attachments: [
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    message_count: 1,
                },
            ],
        };
        server.mockEndpoint().get("/v0/threads").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.threads.list();
        expect(response).toEqual({
            count: 1,
            limit: 1,
            nextPageToken: "next_page_token",
            threads: [
                {
                    inboxId: "inbox_id",
                    threadId: "thread_id",
                    labels: ["labels", "labels"],
                    timestamp: new Date("2024-01-15T09:30:00.000Z"),
                    senders: ["senders", "senders"],
                    recipients: ["recipients", "recipients"],
                    subject: "subject",
                    preview: "preview",
                    attachments: [
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    messageCount: 1,
                },
                {
                    inboxId: "inbox_id",
                    threadId: "thread_id",
                    labels: ["labels", "labels"],
                    timestamp: new Date("2024-01-15T09:30:00.000Z"),
                    senders: ["senders", "senders"],
                    recipients: ["recipients", "recipients"],
                    subject: "subject",
                    preview: "preview",
                    attachments: [
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    messageCount: 1,
                },
            ],
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new AgentMailClient({
            apiKey: "test",
            environment: { http: server.baseUrl, websockets: server.baseUrl },
        });

        const rawResponseBody = {
            inbox_id: "inbox_id",
            thread_id: "thread_id",
            labels: ["labels", "labels"],
            timestamp: "2024-01-15T09:30:00Z",
            senders: ["senders", "senders"],
            recipients: ["recipients", "recipients"],
            subject: "subject",
            preview: "preview",
            attachments: [
                {
                    attachment_id: "attachment_id",
                    filename: "filename",
                    content_type: "content_type",
                    size: 1,
                    inline: true,
                },
                {
                    attachment_id: "attachment_id",
                    filename: "filename",
                    content_type: "content_type",
                    size: 1,
                    inline: true,
                },
            ],
            message_count: 1,
            messages: [
                {
                    inbox_id: "inbox_id",
                    thread_id: "thread_id",
                    message_id: "message_id",
                    labels: ["labels", "labels"],
                    timestamp: "2024-01-15T09:30:00Z",
                    from: "from",
                    reply_to: ["reply_to", "reply_to"],
                    to: ["to", "to"],
                    cc: ["cc", "cc"],
                    bcc: ["bcc", "bcc"],
                    subject: "subject",
                    preview: "preview",
                    text: "text",
                    html: "html",
                    attachments: [
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    in_reply_to: "in_reply_to",
                    references: ["references", "references"],
                    updated_at: "2024-01-15T09:30:00Z",
                    created_at: "2024-01-15T09:30:00Z",
                },
                {
                    inbox_id: "inbox_id",
                    thread_id: "thread_id",
                    message_id: "message_id",
                    labels: ["labels", "labels"],
                    timestamp: "2024-01-15T09:30:00Z",
                    from: "from",
                    reply_to: ["reply_to", "reply_to"],
                    to: ["to", "to"],
                    cc: ["cc", "cc"],
                    bcc: ["bcc", "bcc"],
                    subject: "subject",
                    preview: "preview",
                    text: "text",
                    html: "html",
                    attachments: [
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachment_id: "attachment_id",
                            filename: "filename",
                            content_type: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    in_reply_to: "in_reply_to",
                    references: ["references", "references"],
                    updated_at: "2024-01-15T09:30:00Z",
                    created_at: "2024-01-15T09:30:00Z",
                },
            ],
            updated_at: "2024-01-15T09:30:00Z",
            created_at: "2024-01-15T09:30:00Z",
        };
        server
            .mockEndpoint()
            .get("/v0/threads/thread_id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.threads.get("thread_id");
        expect(response).toEqual({
            inboxId: "inbox_id",
            threadId: "thread_id",
            labels: ["labels", "labels"],
            timestamp: new Date("2024-01-15T09:30:00.000Z"),
            senders: ["senders", "senders"],
            recipients: ["recipients", "recipients"],
            subject: "subject",
            preview: "preview",
            attachments: [
                {
                    attachmentId: "attachment_id",
                    filename: "filename",
                    contentType: "content_type",
                    size: 1,
                    inline: true,
                },
                {
                    attachmentId: "attachment_id",
                    filename: "filename",
                    contentType: "content_type",
                    size: 1,
                    inline: true,
                },
            ],
            messageCount: 1,
            messages: [
                {
                    inboxId: "inbox_id",
                    threadId: "thread_id",
                    messageId: "message_id",
                    labels: ["labels", "labels"],
                    timestamp: new Date("2024-01-15T09:30:00.000Z"),
                    from: "from",
                    replyTo: ["reply_to", "reply_to"],
                    to: ["to", "to"],
                    cc: ["cc", "cc"],
                    bcc: ["bcc", "bcc"],
                    subject: "subject",
                    preview: "preview",
                    text: "text",
                    html: "html",
                    attachments: [
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    inReplyTo: "in_reply_to",
                    references: ["references", "references"],
                    updatedAt: new Date("2024-01-15T09:30:00.000Z"),
                    createdAt: new Date("2024-01-15T09:30:00.000Z"),
                },
                {
                    inboxId: "inbox_id",
                    threadId: "thread_id",
                    messageId: "message_id",
                    labels: ["labels", "labels"],
                    timestamp: new Date("2024-01-15T09:30:00.000Z"),
                    from: "from",
                    replyTo: ["reply_to", "reply_to"],
                    to: ["to", "to"],
                    cc: ["cc", "cc"],
                    bcc: ["bcc", "bcc"],
                    subject: "subject",
                    preview: "preview",
                    text: "text",
                    html: "html",
                    attachments: [
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                        {
                            attachmentId: "attachment_id",
                            filename: "filename",
                            contentType: "content_type",
                            size: 1,
                            inline: true,
                        },
                    ],
                    inReplyTo: "in_reply_to",
                    references: ["references", "references"],
                    updatedAt: new Date("2024-01-15T09:30:00.000Z"),
                    createdAt: new Date("2024-01-15T09:30:00.000Z"),
                },
            ],
            updatedAt: new Date("2024-01-15T09:30:00.000Z"),
            createdAt: new Date("2024-01-15T09:30:00.000Z"),
        });
    });
});
